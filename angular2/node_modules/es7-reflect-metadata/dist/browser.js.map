{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3e507faa12eb117cd8c3","webpack:///./src/global/browser.ts","webpack:///./src/reflect-metadata.ts","webpack:///./src/helper/get-proto-of-type.ts","webpack:///./src/helper/to-property-key.ts","webpack:///./src/helper/is-symbol.ts","webpack:///./src/helper/is-constructor.ts","webpack:///./src/helper/is-undefined.ts","webpack:///./src/helper/is-array.ts","webpack:///./src/helper/is-object.ts","webpack:///./src/helper/metadata.ts","webpack:///./src/shim/weakmap.ts","webpack:///./src/helper/create-unique-key.ts","webpack:///./src/helper/helper-constants.ts","webpack:///./src/helper/has-own.ts","webpack:///./src/helper/create-uuid.ts","webpack:///./src/helper/gen-randombytes.browser.ts","webpack:///./src/helper/fill-randombytes.ts","webpack:///./src/helper/get-or-create-weakmap.ts","webpack:///./src/helper/ordinary-own-metadata-keys.ts","webpack:///./src/helper/get-or-create-metadata-map.ts","webpack:///./src/shim/map.ts","webpack:///./src/helper/ordinary-metadata-keys.ts","webpack:///./src/shim/set.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACtCA,KAAY,OAAO,uBAAM,CAAqB,CAAC;AAEzC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAEhC,8BAAc,CAAqB,CAAC;;;;;;;;ACWpC,+CAA6B,CAA4B,CAAC;AAC1D,6CAA4B,CAA0B,CAAC;AACvD,4CAA4B,CAAyB,CAAC;AACtD,0CAA0B,CAAuB,CAAC;AAClD,sCAAsB,CAAmB,CAAC;AAC1C,uCAAuB,CAAoB,CAAC;AAC5C,sCAA2B,CAAmB,CAAC;AAC/C,wDAAsC,EAAqC,CAAC;AAC5E,wDAAqC,EAAqC,CAAC;AAC3E,oDAAmC,EAAiC,CAAC;AA6DrE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCG;AACH,mBAAyB,UAAoE,EAAE,MAAc,EAAE,SAA2B,EAAE,gBAAqC;KAC/K,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;SACnC,EAAE,CAAC,CAAC,CAAC,kBAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACzB,MAAM,IAAI,SAAS,CAAC,aAAa,GAAQ,UAAU,GAAG,gCAAgC,CAAC,CAAC;SAC1F,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC3B,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;SACrE,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAChC,MAAM,IAAI,SAAS,CAAC,aAAa,GAAQ,SAAS,GAAE,cAAc,CAAC,CAAC;SACtE,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;aACrC,MAAM,IAAI,SAAS,CAAC,mBAAmB,GAAQ,gBAAgB,GAAG,mBAAmB,CAAC,CAAC;SACzF,CAAC;SAED,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;SACrC,MAAM,CAAC,8BAA8B,CAAoB,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;KAC5G,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,EAAE,CAAC,CAAC,CAAC,kBAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACzB,MAAM,IAAI,SAAS,CAAC,aAAa,GAAQ,UAAU,GAAG,gCAAgC,CAAC,CAAC;SAC1F,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC3B,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;SACrE,CAAC;SAED,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;SACrC,MAAM,CAAC,iCAAiC,CAAsB,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;KAC/F,CAAC;KACD,IAAI,CAAC,CAAC;SACJ,EAAE,CAAC,CAAC,CAAC,kBAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACzB,MAAM,IAAI,SAAS,CAAC,aAAa,GAAQ,UAAU,GAAG,gCAAgC,CAAC,CAAC;SAC1F,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,8BAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAChC,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,uBAAuB,CAAC,CAAC;SACzE,CAAC;SAED,MAAM,CAAC,mBAAmB,CAAmB,UAAU,EAAY,MAAM,CAAC,CAAC;KAC7E,CAAC;AACH,EAAC;AAvCe,iBAAQ,WAuCvB;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuCG;AACH,mBAAyB,WAAgB,EAAE,aAAkB;KAG3D,mBAAmB,MAAc,EAAE,SAA2B;SAC5D,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC5B,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;aACrE,CAAC;aAED,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;aACrC,yBAAyB,CAAC,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;SAC3E,CAAC;SACD,IAAI,CAAC,CAAC;aACJ,EAAE,CAAC,CAAC,CAAC,8BAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBAC3B,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,uBAAuB,CAAC,CAAC;aACzE,CAAC;aAED,yBAAyB,CAAC,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC;SACzF,CAAC;KACH,CAAC;KAED,MAAM,CAAC,SAAS,CAAC;AACnB,EAAC;AAtBe,iBAAQ,WAsBvB;AA4DD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsCG;AACH,yBAA+B,WAAgB,EAAE,aAAkB,EAAE,MAAc,EAAE,SAA2B;KAC9G,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,MAAM,CAAC,yBAAyB,CAAC,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAClF,EAAC;AATe,uBAAc,iBAS7B;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,sBAA4B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KACvF,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7D,EAAC;AATe,oBAAW,cAS1B;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,yBAA+B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KAC1F,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAChE,EAAC;AATe,uBAAc,iBAS7B;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,sBAA4B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KACvF,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAC7D,EAAC;AATe,oBAAW,cAS1B;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,yBAA+B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KAC1F,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAChE,EAAC;AATe,uBAAc,iBAS7B;AAgDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCG;AACH,0BAAgC,MAAc,EAAE,SAA2B;KACzE,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,MAAM,CAAC,6CAAoB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACjD,EAAC;AATe,wBAAe,kBAS9B;AAgDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCG;AACH,6BAAmC,MAAc,EAAE,SAA2B;KAC5E,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,MAAM,CAAC,oDAAuB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACpD,EAAC;AATe,2BAAkB,qBASjC;AAkDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;AACH,yBAA+B,WAAgB,EAAE,MAAc,EAAE,SAA2B;KAC1F,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,mBAAmB,CAAC,CAAC;KACrE,CAAC;KACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC,SAAS,GAAG,+BAAa,CAAC,SAAS,CAAC,CAAC;KACvC,CAAC;KAED,4GAA4G;KAC5G,IAAI,WAAW,GAAG,mDAAsB,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;KAC9E,EAAE,CAAC,CAAC,0BAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SAC7B,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACrC,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;SACzB,MAAM,CAAC,IAAI,CAAC;KACd,CAAC;KAED,IAAI,cAAc,GAAG,uBAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KAC9C,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KACjC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;SAC5B,MAAM,CAAC,IAAI,CAAC;KACd,CAAC;KAED,uBAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC5B,MAAM,CAAC,IAAI,CAAC;AACd,EAAC;AA9Be,uBAAc,iBA8B7B;AAED,8BAA6B,UAA4B,EAAE,MAAgB;KACzE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;SAChD,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;SAC9B,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;SAClC,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC5B,EAAE,CAAC,CAAC,CAAC,8BAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBAC9B,MAAM,IAAI,SAAS,CAAC,SAAS,GAAQ,MAAM,GAAG,uBAAuB,CAAC,CAAC;aACzE,CAAC;aACD,MAAM,GAAa,SAAS,CAAC;SAC/B,CAAC;KACH,CAAC;KACD,MAAM,CAAC,MAAM,CAAC;AAChB,EAAC;AAED,yCAAwC,UAA6B,EAAE,MAAc,EAAE,WAA4B,EAAE,UAA8B;KACjJ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;SAChD,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;SAC9B,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;SAC3D,EAAE,CAAC,CAAC,CAAC,0BAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aAC5B,EAAE,CAAC,CAAC,CAAC,oBAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACzB,MAAM,IAAI,SAAS,CAAC,YAAY,GAAQ,SAAS,GAAG,mBAAmB,CAAC,CAAC;aAC3E,CAAC;aACD,UAAU,GAAuB,SAAS,CAAC;SAC7C,CAAC;KACH,CAAC;KACD,MAAM,CAAC,UAAU,CAAC;AACpB,EAAC;AAED,4CAA2C,UAA+B,EAAE,MAAc,EAAE,WAA4B;KACtH,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;SAChD,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;SAC9B,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;KACjC,CAAC;AACH,EAAC;AAID,qHAAoH;AACpH,8BAA6B,WAAgB,EAAE,CAAS,EAAE,CAAkB;KAC1E,IAAI,MAAM,GAAG,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACvD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SACX,MAAM,CAAC,IAAI,CAAC;KACd,CAAC;KAED,IAAI,MAAM,GAAG,kCAAc,CAAC,CAAC,CAAC,CAAC;KAC/B,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;SACpB,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;KACrD,CAAC;KAED,MAAM,CAAC,KAAK,CAAC;AACf,EAAC;AAED,wHAAuH;AACvH,iCAAgC,WAAgB,EAAE,CAAS,EAAE,CAAkB;KAC7E,IAAI,WAAW,GAAG,mDAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;KACjE,EAAE,CAAC,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC;SAC9B,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;AAC/C,EAAC;AAED,qHAAoH;AACpH,8BAA6B,WAAgB,EAAE,CAAS,EAAE,CAAkB;KAC1E,IAAI,MAAM,GAAG,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACvD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SACX,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACnD,CAAC;KAED,IAAI,MAAM,GAAG,kCAAc,CAAC,CAAC,CAAC,CAAC;KAC/B,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;SACpB,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;KACrD,CAAC;KAED,MAAM,CAAC,SAAS,CAAC;AACnB,EAAC;AAED,wHAAuH;AACvH,iCAAgC,WAAgB,EAAE,CAAS,EAAE,CAAkB;KAC7E,IAAI,WAAW,GAAG,mDAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;KACjE,EAAE,CAAC,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC;SAC9B,MAAM,CAAC,SAAS,CAAC;KACnB,CAAC;KAED,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACtC,EAAC;AAED,yIAAwI;AACxI,oCAAmC,WAAgB,EAAE,aAAkB,EAAE,CAAS,EAAE,CAAkB;KACpG,IAAI,WAAW,GAAG,mDAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;KAChE,WAAW,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAC9C,EAAC;;;;;;;;ACtkCD,KAAM,iBAAiB,GAAG,QAAQ,CAAC,SAAS,CAAC;AAE7C,yBAA+B,CAAM;KACnC,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;KACrC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,iBAAiB,CAAC,CAAC,CAAC;SACvD,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,iEAAiE;KACjE,0EAA0E;KAC1E,qFAAqF;KACrF,gFAAgF;KAChF,kCAAkC;KAElC,wFAAwF;KACxF,gFAAgF;KAChF,EAAE,CAAC,CAAC,KAAK,KAAK,iBAAiB,CAAC,CAAC,CAAC;SAChC,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,yGAAyG;KACzG,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;KAC5B,IAAI,cAAc,GAAG,SAAS,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;KACnE,EAAE,CAAC,CAAC,cAAc,IAAI,IAAI,IAAI,cAAc,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SAClE,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,gFAAgF;KAChF,IAAI,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;KAC7C,EAAE,CAAC,CAAC,OAAO,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC;SACtC,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,iFAAiF;KACjF,EAAE,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;SACtB,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,+CAA+C;KAC/C,MAAM,CAAC,WAAW,CAAC;AACrB,EAAC;AAtCe,uBAAc,iBAsC7B;;;;;;;;ACxCD,uCAAuB,CAAa,CAAC;AACrC,2EAA0E;AAC1E,wBAA8B,KAAU;KACtC,EAAE,CAAC,CAAC,oBAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACpB,MAAM,CAAS,KAAK,CAAC;KACvB,CAAC;KACD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,EAAC;AALe,sBAAa,gBAK5B;;;;;;;;ACPD,mGAAkG;AAClG,mBAAyB,CAAM;KAC7B,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;AAC/B,EAAC;AAFe,iBAAQ,WAEvB;;;;;;;;ACFD,2EAA0E;AAC1E,wBAA8B,CAAM;KAClC,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC;AACjC,EAAC;AAFe,sBAAa,gBAE5B;;;;;;;;ACJD,sGAAqG;AACrG,sBAA4B,CAAM;KAChC,MAAM,CAAC,CAAC,KAAK,SAAS,CAAC;AACzB,EAAC;AAFe,oBAAW,cAE1B;;;;;;;;ACFD,qEAAoE;AACpE,kBAAwB,CAAM;KAC5B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1B,EAAC;AAFe,gBAAO,UAEtB;;;;;;;;ACHD,yEAAwE;AACxE,mBAAyB,CAAM;KAC7B,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,IAAI,GAAG,OAAO,CAAC,KAAK,UAAU,CAAC;AACtE,EAAC;AAFe,iBAAQ,WAEvB;;;;;;;;ACJD,qCAAoC,EAAiB,CAAC;AACtD,KAAM,QAAQ,GAAQ,OAAO,OAAO,KAAK,UAAU,GAAG,OAAO,GAAG,+BAAqB,EAAE,CAAC;AACxF,kCAAiC;AACjC,4FAA2F;AAC9E,qBAAY,GAAG,IAAI,QAAQ,EAAE,CAAC;;;;;;;;ACJ3C,+CAA8B,EAA6B,CAAC;AAC5D,mDAAsC,EAAiC,CAAC;AAG3D,gBAAO,GAAG,mCAAe,EAAE,CAAC;AAGzC;KAEE;SADQ,SAAI,GAAG,mCAAe,EAAE,CAAC;KAClB,CAAC;KAEhB,sBAAI,2BAAM;cAAV;aACE,MAAM,CAAC,CAAC,CAAC;SACX,CAAC;;;QAAA;KAED,qBAAG,GAAH,UAAI,MAAS;SACX,IAAI,KAAK,GAAG,+CAAuB,CAAC,eAAO,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;SACvE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACV,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC;SAC5B,CAAC;SACD,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,qBAAG,GAAH,UAAI,MAAS;SACX,IAAI,KAAK,GAAG,+CAAuB,CAAC,eAAO,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;SACvE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACV,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B,CAAC;SACD,MAAM,CAAC,SAAS,CAAC;KACnB,CAAC;KAED,qBAAG,GAAH,UAAI,MAAS,EAAE,KAAQ;SACrB,IAAI,KAAK,GAAG,+CAAuB,CAAC,eAAO,EAAE,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;SACtE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SACzB,MAAM,CAAC,IAAI,CAAC;KACd,CAAC;KAED,wBAAM,GAAN,UAAO,MAAS;SACd,IAAI,KAAK,GAAG,+CAAuB,CAAC,eAAO,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;SACvE,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;aAC9B,MAAM,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC,CAAC;SACD,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,uBAAK,GAAL;SACE,mEAAmE;SACnE,IAAI,CAAC,IAAI,GAAG,mCAAe,EAAE,CAAC;KAChC,CAAC;KAEH,cAAC;AAAD,EAAC;AA3CY,gBAAO,UA2CnB;AAGD;KACE,MAAM,CAAC,OAAO,CAAC;AACjB,EAAC;AAFe,8BAAqB,wBAEpC;;;;;;;;ACvDD,8CAA6B,EAAoB,CAAC;AAClD,qCAAqB,EAAW,CAAC;AACjC,yCAAyB,EAAe,CAAC;AAE5B,aAAI,GAAQ,EAAE,CAAC;AAG5B;KACE,IAAI,GAAQ,CAAC;KACb,GAAG,CAAC;SACF,GAAG,GAAG,iCAAc,GAAG,wBAAU,EAAE,CAAC;KACtC,CAAC,QAAQ,gBAAM,CAAC,IAAI,CAAC,YAAI,EAAE,GAAG,CAAC,EAAE;KAEjC,YAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;KAEjB,MAAM,CAAC,GAAG,CAAC;AACb,EAAC;AATe,wBAAe,kBAS9B;;;;;;;;ACfY,kBAAS,GAAW,EAAE,CAAC;AAEvB,uBAAc,GAAW,aAAa,CAAC;;;;;;;;ACHvC,eAAM,GAAa,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;;;;;;;;ACAhE,8CAAwB,EAAoB,CAAC;AAC7C,6CAA6B,EAAmB,CAAC;AAEjD;KACE,IAAI,IAAI,GAAG,gCAAc,CAAC,4BAAS,CAAC,CAAC;KACrC,kCAAkC;KAClC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;KAChC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;KAEhC,IAAI,MAAM,GAAG,EAAE,CAAC;KAEhB,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,4BAAS,EAAE,EAAE,MAAM,EAAE,CAAC;SAClD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;SACxB,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;aACjD,MAAM,IAAI,GAAG,CAAC;SAChB,CAAC;SACD,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;aACd,MAAM,IAAI,GAAG,CAAC;SAChB,CAAC;SACD,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;KAC5C,CAAC;KAED,MAAM,CAAC,MAAM,CAAC;AAChB,EAAC;AApBe,mBAAU,aAoBzB;;;;;;;;ACtBD,8CAA8B,EAAoB,CAAC;AAEnD,yBAA+B,IAAY;KACzC,IAAI,IAAgB,CAAC;KAErB,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;SACrC,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;SAC5B,EAAE,CAAC,CAAC,OAAa,MAAO,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;aAC1C,MAAO,CAAC,MAAM,CAAC,eAAe,CAAa,IAAI,CAAC,CAAC;SACzD,CAAC;SAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAa,MAAO,CAAC,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC;aACnD,MAAO,CAAC,QAAQ,CAAC,eAAe,CAAa,IAAI,CAAC,CAAC;SAC3D,CAAC;SAAC,IAAI,CAAC,CAAC;aACN,kCAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC9B,CAAC;KACH,CAAC;KAAC,IAAI,CAAC,CAAC;SACN,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;SACvB,kCAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC9B,CAAC;KAED,MAAM,CAAC,IAAI,CAAC;AACb,EAAC;AAlBc,uBAAc,iBAkB5B;;;;;;;;ACnBF,0BAAgC,MAAkB,EAAE,IAAY;KAC9D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;SAC9B,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC;KACtC,CAAC;KACD,MAAM,CAAC,MAAM,CAAC;AAChB,EAAC;AALe,wBAAe,kBAK9B;;;;;;;;ACPD,qCAAqB,EAAW,CAAC;AAEjC,kCAAwC,OAAe,EAAE,MAAW,EAAE,MAAY;KAChF,EAAE,CAAC,CAAC,CAAC,gBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;SAClC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACZ,MAAM,CAAC,SAAS,CAAC;SACnB,CAAC;SAED,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE;aACrC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;UAC3B,CAAC,CAAC;KACL,CAAC;KACD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,EAAC;AAXe,gCAAuB,0BAWtC;;;;;;;;ACbD,wDAAqC,EAA8B,CAAC;AACpE,6GAA4G;AAC5G,kCAAwC,MAAc,EAAE,SAA0B;KAChF,IAAI,WAAW,GAAG,mDAAsB,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;KAC9E,IAAI,IAAI,GAAU,EAAE,CAAC;KACrB,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SAChB,WAAW,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,GAAG,IAAK,WAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAd,CAAc,CAAC,CAAC;KAClD,CAAC;KAED,MAAM,CAAC,IAAI,CAAC;AACd,EAAC;AARe,gCAAuB,0BAQtC;;;;;;;;ACVD,sCAA2B,CAAY,CAAC;AACxC,iCAA6C,EAAa,CAAC;AAE3D,KAAM,IAAI,GAAQ,OAAO,GAAG,KAAK,UAAU,GAAG,GAAG,GAAG,uBAAiB,EAAE,CAAC;AACxE,mHAAkH;AAClH,iCAAuC,MAAc,EAAE,SAA0B,EAAE,MAAe;KAChG,IAAI,cAAc,GAAG,uBAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KAC9C,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;SACpB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACZ,MAAM,CAAC,SAAS,CAAC;SACnB,CAAC;SACD,iCAAiC;SACjC,gEAAgE;SAChE,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;SAC5B,uBAAY,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;KAC3C,CAAC;KAED,IAAI,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAChD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SACjB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACZ,MAAM,CAAC,SAAS,CAAC;SACnB,CAAC;SACD,iCAAiC;SACjC,sCAAsC;SACtC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;SACzB,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;KAC7C,CAAC;KAED,MAAM,CAAC,WAAW,CAAC;AACrB,EAAC;AAxBe,+BAAsB,yBAwBrC;;;;;;;;AC7BD,kBAAiB;AACJ,sBAAa,GAAQ,EAAE,CAAC;AAErC;KAKE;SAJQ,UAAK,GAAa,EAAE,CAAC;SACrB,YAAO,GAAa,EAAE,CAAC;SACvB,WAAM,GAAQ,qBAAa,CAAC;KAErB,CAAC;KAEhB,sBAAI,uBAAM;cAAV;aACE,MAAM,CAAC,CAAC,CAAC;SACX,CAAC;;;QAAA;KACD,sBAAI,qBAAI;cAAR;aACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC3B,CAAC;;;QAAA;KAED,iBAAG,GAAH,UAAI,GAAM;SACR,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACxB,MAAM,CAAC,IAAI,CAAC;SACd,CAAC;SAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACzB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;aAClB,MAAM,CAAC,IAAI,CAAC;SACd,CAAC;SAED,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,iBAAG,GAAH,UAAI,GAAM;SACR,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAE5B,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;aACf,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;aAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAC7B,CAAC;SAED,MAAM,CAAC,SAAS,CAAC;KACnB,CAAC;KAED,iBAAG,GAAH,UAAI,GAAM,EAAE,KAAQ;SAClB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;SAClB,MAAM,CAAC,IAAI,CAAC;KACd,CAAC;KAED,oBAAM,GAAN,UAAO,GAAQ;SACb,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5B,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;aACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC9B,IAAI,CAAC,MAAM,GAAG,qBAAa,CAAC;aAC5B,MAAM,CAAC,IAAI,CAAC;SACd,CAAC;SACD,MAAM,CAAC,KAAK,CAAC;KACf,CAAC;KAED,mBAAK,GAAL;SACE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;SACtB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;SACxB,IAAI,CAAC,MAAM,GAAG,qBAAa,CAAC;KAC9B,CAAC;KAED,qBAAO,GAAP,UAAQ,QAAoD,EAAE,OAAa;SACzE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;aAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACxB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC5B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;aAClB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SACxC,CAAC;KACH,CAAC;KAEO,mBAAK,GAAb,UAAc,GAAM;SAClB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;SACxB,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;SACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;aAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBACpB,MAAM,CAAC,CAAC,CAAC;aACX,CAAC;SACH,CAAC;SACD,MAAM,CAAC,CAAC,CAAC,CAAC;KACZ,CAAC;KACH,UAAC;AAAD,EAAC;AAnFY,YAAG,MAmFf;AAED;KACE,MAAM,CAAC,GAAG,CAAC;AACb,EAAC;AAFe,0BAAiB,oBAEhC;;;;;;;;AC1FD,wDAAsC,EAA8B,CAAC;AACrE,+CAA6B,CAAqB,CAAC;AACnD,iCAAgC,EAAa,CAAC;AAE9C,KAAM,IAAI,GAAQ,OAAO,GAAG,KAAK,UAAU,GAAG,GAAG,GAAG,uBAAiB,EAAE,CAAC;AACxE,0GAAyG;AACzG,+BAAqC,CAAS,EAAE,CAAkB;KAChE,IAAI,OAAO,GAAG,oDAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5C,IAAI,MAAM,GAAG,kCAAc,CAAC,CAAC,CAAC,CAAC;KAC/B,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;SACpB,MAAM,CAAC,OAAO,CAAC;KACjB,CAAC;KAED,IAAI,UAAU,GAAG,oBAAoB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KACjD,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;SAC3B,MAAM,CAAC,OAAO,CAAC;KACjB,CAAC;KACD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;SACxB,MAAM,CAAC,UAAU,CAAC;KACpB,CAAC;KAED,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;KACrB,IAAI,IAAI,GAAU,EAAE,CAAC;KAErB,GAAG,CAAC,CAAY,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,CAAC;SAAnB,IAAI,GAAG;SACV,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC1B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACZ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjB,CAAC;MACF;KAED,GAAG,CAAC,CAAY,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU,CAAC;SAAtB,IAAI,GAAG;SACV,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC1B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;aACZ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjB,CAAC;MACF;KAED,MAAM,CAAC,IAAI,CAAC;AACd,EAAC;AAnCe,6BAAoB,uBAmCnC;;;;;;;;ACvCD,wFAAuF;AAE5E,sBAAa,GAAQ,EAAE,CAAC;AAEnC;KAGE;SAFQ,SAAI,GAAG,IAAI,GAAG,EAAE,CAAC;KAEV,CAAC;KAEhB,sBAAI,uBAAM;cAAV;aACE,MAAM,CAAC,CAAC,CAAC;SACX,CAAC;;;QAAA;KACD,sBAAI,qBAAI;cAAR;aACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;SACxB,CAAC;;;QAAA;KAED,iBAAG,GAAH,UAAI,KAAQ;SACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAC;KAED,iBAAG,GAAH,UAAI,KAAQ;SACV,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SAC5B,MAAM,CAAC,IAAI,CAAC;KACd,CAAC;KAED,oBAAM,GAAN,UAAO,KAAQ;SACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACjC,CAAC;KAED,mBAAK,GAAL;SACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;KACpB,CAAC;KAED,qBAAO,GAAP,UAAQ,QAAoD,EAAE,OAAY;SACxE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KACvC,CAAC;KAEH,UAAC;AAAD,EAAC;AAjCY,YAAG,MAiCf;AAED;KACE,MAAM,CAAC,GAAG,CAAC;AACb,EAAC;AAFe,0BAAiB,oBAEhC","file":"browser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Reflect\"] = factory();\n\telse\n\t\troot[\"Reflect\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3e507faa12eb117cd8c3\n **/","import * as Reflect from \"../reflect-metadata\";\n\n(<any>window).Reflect = Reflect;\n\nexport * from \"../reflect-metadata\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/global/browser.ts\n **/","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nimport {createUniqueKey} from \"./helper/create-unique-key\";\nimport {getProtoOfType} from \"./helper/get-proto-of-type\";\nimport {toPropertyKey} from \"./helper/to-property-key\";\nimport {isConstructor} from \"./helper/is-constructor\";\nimport {isUndefined} from \"./helper/is-undefined\";\nimport {isArray} from \"./helper/is-array\";\nimport {isObject} from \"./helper/is-object\";\nimport {__Metadata__} from \"./helper/metadata\";\nimport {ordinaryOwnMetadataKeys} from \"./helper/ordinary-own-metadata-keys\";\nimport {getOrCreateMetadataMap} from \"./helper/get-or-create-metadata-map\";\nimport {ordinaryMetadataKeys} from \"./helper/ordinary-metadata-keys\";\n\nimport {createSetPolyfill} from \"./shim/set\";\n\n\n// Load global or shim versions of Map, Set, and WeakMap\n// TODO: fix the typescript types\n\n/**\n * Applies a set of decorators to a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @returns The result of applying the provided decorators.\n * @remarks Decorators are applied in reverse order of their positions in the array.\n * @example\n *\n *     class C { }\n *\n *     // constructor\n *     C = Reflect.decorate(decoratorsArray, C);\n *\n */\nexport function decorate(decorators: ClassDecorator[], target: Function): Function;\n\n/**\n * Applies a set of decorators to a property of a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @param targetKey The property key to decorate.\n * @param descriptor A property descriptor\n * @remarks Decorators are applied in reverse order.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod() { }\n *         method() { }\n *     }\n *\n *     // property (on constructor)\n *     Reflect.decorate(decoratorsArray, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.decorate(decoratorsArray, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Object.defineProperty(C, \"staticMethod\",\n *         Reflect.decorate(decoratorsArray, C, \"staticMethod\",\n *             Object.getOwnPropertyDescriptor(C, \"staticMethod\")));\n *\n *     // method (on prototype)\n *     Object.defineProperty(C.prototype, \"method\",\n *         Reflect.decorate(decoratorsArray, C.prototype, \"method\",\n *             Object.getOwnPropertyDescriptor(C.prototype, \"method\")));\n *\n */\nexport function decorate(decorators: (PropertyDecorator | MethodDecorator)[], target: Object, targetKey: string | symbol, descriptor?: PropertyDescriptor): PropertyDescriptor;\n\n/**\n * Applies a set of decorators to a property of a target object.\n * @param decorators An array of decorators.\n * @param target The target object.\n * @param targetKey (Optional) The property key to decorate.\n * @param targetDescriptor (Optional) The property descriptor for the target key\n * @remarks Decorators are applied in reverse order.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     C = Reflect.decorate(decoratorsArray, C);\n *\n *     // property (on constructor)\n *     Reflect.decorate(decoratorsArray, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.decorate(decoratorsArray, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Object.defineProperty(C, \"staticMethod\",\n *         Reflect.decorate(decoratorsArray, C, \"staticMethod\",\n *             Object.getOwnPropertyDescriptor(C, \"staticMethod\")));\n *\n *     // method (on prototype)\n *     Object.defineProperty(C.prototype, \"method\",\n *         Reflect.decorate(decoratorsArray, C.prototype, \"method\",\n *             Object.getOwnPropertyDescriptor(C.prototype, \"method\")));\n *\n */\nexport function decorate(decorators: (ClassDecorator | MethodDecorator | PropertyDecorator)[], target: Object, targetKey?: string | symbol, targetDescriptor?: PropertyDescriptor): any {\n  if (!isUndefined(targetDescriptor)) {\n    if (!isArray(decorators)) {\n      throw new TypeError('decorators ' + <any>decorators + ' is not an array of decorators');\n    }\n    else if (!isObject(target)) {\n      throw new TypeError('target ' + <any>target + ' is not an object');\n    }\n    else if (isUndefined(targetKey)) {\n      throw new TypeError('target key ' + <any>targetKey +'is undefined');\n    }\n    else if (!isObject(targetDescriptor)) {\n      throw new TypeError('targetDescriptor ' + <any>targetDescriptor + ' is not an object');\n    }\n\n    targetKey = toPropertyKey(targetKey);\n    return DecoratePropertyWithDescriptor(<MethodDecorator[]>decorators, target, targetKey, targetDescriptor);\n  }\n  else if (!isUndefined(targetKey)) {\n    if (!isArray(decorators)) {\n      throw new TypeError('decorators ' + <any>decorators + ' is not an array of decorators');\n    }\n    else if (!isObject(target)) {\n      throw new TypeError('target ' + <any>target + ' is not an object');\n    }\n\n    targetKey = toPropertyKey(targetKey);\n    return DecoratePropertyWithoutDescriptor(<PropertyDecorator[]>decorators, target, targetKey);\n  }\n  else {\n    if (!isArray(decorators)) {\n      throw new TypeError('decorators ' + <any>decorators + ' is not an array of decorators');\n    }\n    else if (!isConstructor(target)) {\n      throw new TypeError('target ' + <any>target + ' is not a constructor');\n    }\n\n    return DecorateConstructor(<ClassDecorator[]>decorators, <Function>target);\n  }\n}\n\n/**\n * A default metadata decorator factory that can be used on a class, class member, or parameter.\n * @param metadataKey The key for the metadata entry.\n * @param metadataValue The value for the metadata entry.\n * @returns A decorator function.\n * @remarks\n * If `metadataKey` is already defined for the target and target key, the\n * metadataValue for that key will be overwritten.\n * @example\n *\n *     // constructor\n *     @Reflect.metadata(key, value)\n *     class C {\n *     }\n *\n *     // property (on constructor, TypeScript only)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         static staticProperty;\n *     }\n *\n *     // property (on prototype, TypeScript only)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         property;\n *     }\n *\n *     // method (on constructor)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         static staticMethod() { }\n *     }\n *\n *     // method (on prototype)\n *     class C {\n *         @Reflect.metadata(key, value)\n *         method() { }\n *     }\n *\n */\nexport function metadata(metadataKey: any, metadataValue: any) {\n  function decorator(target: Function): void;\n  function decorator(target: Object, targetKey: string | symbol): void;\n  function decorator(target: Object, targetKey?: string | symbol): void {\n    if (!isUndefined(targetKey)) {\n      if (!isObject(target)) {\n        throw new TypeError('target ' + <any>target + ' is not an object');\n      }\n\n      targetKey = toPropertyKey(targetKey);\n      OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n    }\n    else {\n      if (!isConstructor(target)) {\n        throw new TypeError('target ' + <any>target + ' is not a constructor');\n      }\n\n      OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);\n    }\n  }\n\n  return decorator;\n}\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     Reflect.defineMetadata(\"custom:annotation\", options, C);\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): ClassDecorator {\n *         return target => Reflect.defineMetadata(\"custom:annotation\", options, target);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object): void;\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @param targetKey The property key for the target.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", Number, C.prototype, \"method\");\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): PropertyDecorator {\n *         return (target, key) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object, targetKey: string | symbol): void;\n\n/**\n * Define a unique metadata entry on the target.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param metadataValue A value that contains attached metadata.\n * @param target The target object on which to define metadata.\n * @param targetKey (Optional) The property key for the target.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     Reflect.defineMetadata(\"custom:annotation\", options, C);\n *\n *     // property (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     Reflect.defineMetadata(\"custom:annotation\", options, C.prototype, \"method\");\n *\n *     // decorator factory as metadata-producing annotation.\n *     function MyAnnotation(options): Decorator {\n *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n *     }\n *\n */\nexport function defineMetadata(metadataKey: any, metadataValue: any, target: Object, targetKey?: string | symbol): void {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);\n}\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.hasMetadata(\"custom:annotation\", C);\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.hasMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryHasMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C);\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Gets a value indicating whether the target object has the provided metadata key defined.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.hasOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function hasOwnMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadata(\"custom:annotation\", C);\n *\n */\nexport function getMetadata(metadataKey: any, target: Object): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getMetadata(metadataKey: any, target: Object, targetKey: string | symbol): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): any {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryGetMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C);\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object, targetKey: string | symbol): any;\n\n/**\n * Gets the metadata value for the provided metadata key on the target object.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function getOwnMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): any {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);\n}\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadataKeys(C);\n *\n */\nexport function getMetadataKeys(target: Object): any[];\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getMetadataKeys(target: Object, targetKey: string | symbol): any[];\n\n/**\n * Gets the metadata keys defined on the target object or its prototype chain.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getMetadataKeys(C);\n *\n *     // property (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getMetadataKeys(target: Object, targetKey?: string | symbol): any[] {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return ordinaryMetadataKeys(target, targetKey);\n}\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadataKeys(C);\n *\n */\nexport function getOwnMetadataKeys(target: Object): any[];\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getOwnMetadataKeys(target: Object, targetKey: string | symbol): any[];\n\n/**\n * Gets the unique metadata keys defined on the target object.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns An array of unique metadata keys.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.getOwnMetadataKeys(C);\n *\n *     // property (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.getOwnMetadataKeys(C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.getOwnMetadataKeys(C.prototype, \"method\");\n *\n */\nexport function getOwnMetadataKeys(target: Object, targetKey?: string | symbol): any[] {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  return ordinaryOwnMetadataKeys(target, targetKey);\n}\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *     }\n *\n *     // constructor\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C);\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object): boolean;\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey The property key for the target.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // property (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object, targetKey: string | symbol): boolean;\n\n/**\n * Deletes the metadata entry from the target object with the provided key.\n * @param metadataKey A key used to store and retrieve metadata.\n * @param target The target object on which the metadata is defined.\n * @param targetKey (Optional) The property key for the target.\n * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n * @example\n *\n *     class C {\n *         // property declarations are not part of ES6, though they are valid in TypeScript:\n *         // static staticProperty;\n *         // property;\n *\n *         constructor(p) { }\n *         static staticMethod(p) { }\n *         method(p) { }\n *     }\n *\n *     // constructor\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C);\n *\n *     // property (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticProperty\");\n *\n *     // property (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"property\");\n *\n *     // method (on constructor)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C, \"staticMethod\");\n *\n *     // method (on prototype)\n *     result = Reflect.deleteMetadata(\"custom:annotation\", C.prototype, \"method\");\n *\n */\nexport function deleteMetadata(metadataKey: any, target: Object, targetKey?: string | symbol): boolean {\n  if (!isObject(target)) {\n    throw new TypeError('target ' + <any>target + ' is not an object');\n  }\n  else if (!isUndefined(targetKey)) {\n    targetKey = toPropertyKey(targetKey);\n  }\n\n  // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#deletemetadata-metadatakey-p-\n  let metadataMap = getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n  if (isUndefined(metadataMap)) {\n    return false;\n  }\n\n  if (!metadataMap.delete(metadataKey)) {\n    return false;\n  }\n\n  if (metadataMap.size > 0) {\n    return true;\n  }\n\n  let targetMetadata = __Metadata__.get(target);\n  targetMetadata.delete(targetKey);\n  if (targetMetadata.size > 0) {\n    return true;\n  }\n\n  __Metadata__.delete(target);\n  return true;\n}\n\nfunction DecorateConstructor(decorators: ClassDecorator[], target: Function): Function {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    let decorated = decorator(target);\n    if (!isUndefined(decorated)) {\n      if (!isConstructor(decorated)) {\n        throw new TypeError('target ' + <any>target + ' is not a constructor');\n      }\n      target = <Function>decorated;\n    }\n  }\n  return target;\n}\n\nfunction DecoratePropertyWithDescriptor(decorators: MethodDecorator[], target: Object, propertyKey: string | symbol, descriptor: PropertyDescriptor): PropertyDescriptor {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    let decorated = decorator(target, propertyKey, descriptor);\n    if (!isUndefined(decorated)) {\n      if (!isObject(decorated)) {\n        throw new TypeError('decorated ' + <any>decorated + ' is not an object');\n      }\n      descriptor = <PropertyDescriptor>decorated;\n    }\n  }\n  return descriptor;\n}\n\nfunction DecoratePropertyWithoutDescriptor(decorators: PropertyDecorator[], target: Object, propertyKey: string | symbol): void {\n  for (let i = decorators.length - 1; i >= 0; --i) {\n    let decorator = decorators[i];\n    decorator(target, propertyKey);\n  }\n}\n\n\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasmetadata--metadatakey-o-p-\nfunction OrdinaryHasMetadata(MetadataKey: any, O: Object, P: string | symbol): boolean {\n  let hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) {\n    return true;\n  }\n\n  let parent = getProtoOfType(O);\n  if (parent !== null) {\n    return OrdinaryHasMetadata(MetadataKey, parent, P);\n  }\n\n  return false;\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-\nfunction OrdinaryHasOwnMetadata(MetadataKey: any, O: Object, P: string | symbol): boolean {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ false);\n  if (metadataMap === undefined) {\n    return false;\n  }\n\n  return Boolean(metadataMap.has(MetadataKey));\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetmetadata--metadatakey-o-p-\nfunction OrdinaryGetMetadata(MetadataKey: any, O: Object, P: string | symbol): any {\n  let hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) {\n    return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n  }\n\n  let parent = getProtoOfType(O);\n  if (parent !== null) {\n    return OrdinaryGetMetadata(MetadataKey, parent, P);\n  }\n\n  return undefined;\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetownmetadata--metadatakey-o-p-\nfunction OrdinaryGetOwnMetadata(MetadataKey: any, O: Object, P: string | symbol): any {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ false);\n  if (metadataMap === undefined) {\n    return undefined;\n  }\n\n  return metadataMap.get(MetadataKey);\n}\n\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-\nfunction OrdinaryDefineOwnMetadata(MetadataKey: any, MetadataValue: any, O: Object, P: string | symbol): void {\n  let metadataMap = getOrCreateMetadataMap(O, P, /*create*/ true);\n  metadataMap.set(MetadataKey, MetadataValue);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/reflect-metadata.ts\n **/","const functionPrototype = Function.prototype;\n\nexport function getProtoOfType(O: any): any {\n  let proto = Object.getPrototypeOf(O);\n  if (typeof O !== \"function\" || O === functionPrototype) {\n    return proto;\n  }\n\n  // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n  // Try to determine the superclass constructor. Compatible implementations\n  // must either set __proto__ on a subclass constructor to the superclass constructor,\n  // or ensure each class has a valid `constructor` property on its prototype that\n  // points back to the constructor.\n\n  // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n  // This is the case when in ES6 or when using __proto__ in a compatible browser.\n  if (proto !== functionPrototype) {\n    return proto;\n  }\n\n  // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n  let prototype = O.prototype;\n  let prototypeProto = prototype && Object.getPrototypeOf(prototype);\n  if (prototypeProto == null || prototypeProto === Object.prototype) {\n    return proto;\n  }\n\n  // if the constructor was not a function, then we cannot determine the heritage.\n  let constructor = prototypeProto.constructor;\n  if (typeof constructor !== \"function\") {\n    return proto;\n  }\n\n  // if we have some kind of self-reference, then we cannot determine the heritage.\n  if (constructor === O) {\n    return proto;\n  }\n\n  // we have a pretty good guess at the heritage.\n  return constructor;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-proto-of-type.ts\n **/","import {isSymbol} from \"./is-symbol\";\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\nexport function toPropertyKey(value: any): string | symbol {\n  if (isSymbol(value)) {\n    return <symbol>value;\n  }\n  return String(value);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/to-property-key.ts\n **/","// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-symbol-type\nexport function isSymbol(x: any): boolean {\n  return typeof x === \"symbol\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-symbol.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\nexport function isConstructor(x: any): boolean {\n  return typeof x === \"function\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-constructor.ts\n **/","// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-undefined-type\nexport function isUndefined(x: any): boolean {\n  return x === undefined;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-undefined.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\nexport function isArray(x: any): boolean {\n  return Array.isArray(x);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-array.ts\n **/","\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object-type\nexport function isObject(x: any): boolean {\n  return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/is-object.ts\n **/","import {createWeakMapPolyfill} from \"../shim/weakmap\";\nconst _WeakMap: any = typeof WeakMap === \"function\" ? WeakMap : createWeakMapPolyfill();\n// TODO: fix the typescript types\n// export const __Metadata__ = new _WeakMap<Object, Map<string | symbol, Map<any, any>>>();\nexport const __Metadata__ = new _WeakMap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/metadata.ts\n **/","import {createUniqueKey} from \"../helper/create-unique-key\";\nimport {getOrCreateWeakMapTable} from \"../helper/get-or-create-weakmap\";\n\n\nexport const rootKey = createUniqueKey();\n\n\nexport class WeakMap<T, V> {\n  private _key = createUniqueKey();\n  constructor() {}\n\n  get length(): number {\n    return 0;\n  }\n\n  has(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table) {\n      return this._key in table;\n    }\n    return false;\n  }\n\n  get(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table) {\n      return table[this._key];\n    }\n    return undefined;\n  }\n\n  set(target: T, value: V) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ true);\n    table[this._key] = value;\n    return this;\n  }\n\n  delete(target: T) {\n    var table = getOrCreateWeakMapTable(rootKey, target, /*create*/ false);\n    if (table && this._key in table) {\n        return delete table[this._key];\n    }\n    return false;\n  }\n\n  clear() {\n    // NOTE: not a real clear, just makes the previous data unreachable\n    this._key = createUniqueKey();\n  }\n\n}\n\n\nexport function createWeakMapPolyfill(): typeof WeakMap {\n  return WeakMap;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/weakmap.ts\n **/","import {WEAKMAP_PREFIX} from \"./helper-constants\";\nimport {hasOwn} from \"./has-own\";\nimport {createUUID} from \"./create-uuid\";\n\nexport const keys: any = {};\n\n\nexport function createUniqueKey() {\n  var key: any;\n  do {\n    key = WEAKMAP_PREFIX + createUUID();\n  } while (hasOwn.call(keys, key));\n\n  keys[key] = true;\n\n  return key;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/create-unique-key.ts\n **/","\nexport const UUID_SIZE: number = 16;\n\nexport const WEAKMAP_PREFIX: string = \"@@WeakMap@@\";\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/helper-constants.ts\n **/","export const hasOwn: Function = Object.prototype.hasOwnProperty;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/has-own.ts\n **/","import {UUID_SIZE} from \"./helper-constants\";\nimport {genRandomBytes} from \"./gen-randombytes\";\n\nexport function createUUID() {\n  var data = genRandomBytes(UUID_SIZE);\n  // mark as random - RFC 4122 § 4.4\n  data[6] = data[6] & 0x4f | 0x40;\n  data[8] = data[8] & 0xbf | 0x80;\n\n  var result = \"\";\n\n  for (let offset = 0; offset < UUID_SIZE; ++offset) {\n    var byte = data[offset];\n    if (offset === 4 || offset === 6 || offset === 8) {\n      result += \"-\";\n    }\n    if (byte < 16) {\n      result += \"0\";\n    }\n    result += byte.toString(16).toLowerCase();\n  }\n\n  return result;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/create-uuid.ts\n **/","import {BufferLike} from \"./interfaces\";\nimport {fillRandomBytes} from \"./fill-randombytes\";\n\nexport function genRandomBytes(size: number): BufferLike {\n  var data: BufferLike;\n\n  if (typeof Uint8Array === \"function\") {\n    data = new Uint8Array(size);\n    if (typeof (<any>window).crypto !== \"undefined\") {\n      (<any>window).crypto.getRandomValues(<Uint8Array>data);\n    } else if (typeof (<any>window).msCrypto !== \"undefined\") {\n      (<any>window).msCrypto.getRandomValues(<Uint8Array>data);\n    } else {\n      fillRandomBytes(data, size);\n    }\n  } else {\n    data = new Array(size);\n    fillRandomBytes(data, size);\n  }\n\n  return data;\n }\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/gen-randombytes.browser.ts\n **/","import {BufferLike} from \"./interfaces\";\n\nexport function fillRandomBytes(buffer: BufferLike, size: number): BufferLike {\n  for (let i = 0; i < size; ++i) {\n    buffer[i] = Math.random() * 255 | 0;\n  }\n  return buffer;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/fill-randombytes.ts\n **/","import {hasOwn} from \"./has-own\";\n\nexport function getOrCreateWeakMapTable(rootKey: string, target: any, create?: any): any {\n  if (!hasOwn.call(target, rootKey)) {\n    if (!create) {\n      return undefined;\n    }\n\n    Object.defineProperty(target, rootKey, {\n      value: Object.create(null)\n    });\n  }\n  return target[rootKey];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-or-create-weakmap.ts\n **/","import {getOrCreateMetadataMap} from \"./get-or-create-metadata-map\";\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryownmetadatakeys--o-p-\nexport function ordinaryOwnMetadataKeys(target: Object, targetKey: string | symbol): any[] {\n  let metadataMap = getOrCreateMetadataMap(target, targetKey, /*create*/ false);\n  let keys: any[] = [];\n  if (metadataMap) {\n    metadataMap.forEach((_, key) => keys.push(key));\n  }\n\n  return keys;\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/ordinary-own-metadata-keys.ts\n **/","import {__Metadata__} from \"./metadata\";\nimport {createMapPolyfill, Map as Map_} from \"../shim/map\";\n\nconst _Map: any = typeof Map === \"function\" ? Map : createMapPolyfill();\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#getorcreatemetadatamap--o-p-create-\nexport function getOrCreateMetadataMap(target: Object, targetKey: string | symbol, create: boolean): Map<any, any> {\n  let targetMetadata = __Metadata__.get(target);\n  if (!targetMetadata) {\n    if (!create) {\n      return undefined;\n    }\n    // TODO: fix the typescript types\n    // targetMetadata = new _Map<string | symbol, _Map<any, any>>();\n    targetMetadata = new _Map();\n    __Metadata__.set(target, targetMetadata);\n  }\n\n  let keyMetadata = targetMetadata.get(targetKey);\n  if (!keyMetadata) {\n    if (!create) {\n      return undefined;\n    }\n    // TODO: fix the typescript types\n    // keyMetadata = new _Map<any, any>();\n    keyMetadata = new _Map();\n    targetMetadata.set(targetKey, keyMetadata);\n  }\n\n  return keyMetadata;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/get-or-create-metadata-map.ts\n **/","// naive Map shim\nexport const cacheSentinel: any = {};\n\nexport class Map<K, V> {\n  private _keys: Array<K> = [];\n  private _values: Array<V> = [];\n  private _cache: any = cacheSentinel;\n\n  constructor() {}\n\n  get length(): number {\n    return 0;\n  }\n  get size(): number {\n    return this._keys.length;\n  }\n\n  has(key: K): boolean {\n    if (key === this._cache) {\n      return true;\n    }\n\n    if (this._find(key) >= 0) {\n      this._cache = key;\n      return true;\n    }\n\n    return false;\n  }\n\n  get(key: K): V | void {\n    let index = this._find(key);\n\n    if (index >= 0) {\n      this._cache = key;\n      return this._values[index];\n    }\n\n    return undefined;\n  }\n\n  set(key: K, value: V): this {\n    this.delete(key);\n    this._keys.push(key);\n    this._values.push(value);\n    this._cache = key;\n    return this;\n  }\n\n  delete(key: any): boolean {\n    let index = this._find(key);\n    if (index >= 0) {\n      this._keys.splice(index, 1);\n      this._values.splice(index, 1);\n      this._cache = cacheSentinel;\n      return true;\n    }\n    return false;\n  }\n\n  clear(): void {\n    this._keys.length = 0;\n    this._values.length = 0;\n    this._cache = cacheSentinel;\n  }\n\n  forEach(callback: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n    let size = this.size;\n    for (let i = 0; i < size; ++i) {\n      let key = this._keys[i];\n      let value = this._values[i];\n      this._cache = key;\n      callback.call(this, value, key, this);\n    }\n  }\n\n  private _find(key: K): number {\n    const keys = this._keys;\n    const size = keys.length;\n    for (let i = 0; i < size; ++i) {\n      if (keys[i] === key) {\n        return i;\n      }\n    }\n    return -1;\n  }\n}\n\nexport function createMapPolyfill(): typeof Map {\n  return Map;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/map.ts\n **/","import {ordinaryOwnMetadataKeys} from \"./ordinary-own-metadata-keys\";\nimport {getProtoOfType} from \"./get-proto-of-type\";\nimport {createSetPolyfill} from \"../shim/set\";\n\nconst _Set: any = typeof Set === \"function\" ? Set : createSetPolyfill();\n// https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarymetadatakeys--o-p-\nexport function ordinaryMetadataKeys(O: Object, P: string | symbol): any[] {\n  let ownKeys = ordinaryOwnMetadataKeys(O, P);\n  let parent = getProtoOfType(O);\n  if (parent === null) {\n    return ownKeys;\n  }\n\n  let parentKeys = ordinaryMetadataKeys(parent, P);\n  if (parentKeys.length <= 0) {\n    return ownKeys;\n  }\n  if (ownKeys.length <= 0) {\n    return parentKeys;\n  }\n\n  let set = new _Set();\n  let keys: any[] = [];\n\n  for (let key of ownKeys) {\n    let hasKey = set.has(key);\n    if (!hasKey) {\n      set.add(key);\n      keys.push(key);\n    }\n  }\n\n  for (let key of parentKeys) {\n    let hasKey = set.has(key);\n    if (!hasKey) {\n      set.add(key);\n      keys.push(key);\n    }\n  }\n\n  return keys;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helper/ordinary-metadata-keys.ts\n **/","// naive Set shim\nimport {createMapPolyfill} from \"./map\";\n// var _Map: MapConstructor = (typeof Map !== \"undefined\") ? createMapPolyfill() : Map;\n\nexport var cacheSentinel: any = {};\n\nexport class Set<K, V> {\n  private _map = new Map();\n\n  constructor() {}\n\n  get length(): number {\n    return 0;\n  }\n  get size() {\n    return this._map.size;\n  }\n\n  has(value: V): boolean {\n    return this._map.has(value);\n  }\n\n  add(value: V): this {\n    this._map.set(value, value);\n    return this;\n  }\n\n  delete(value: V): boolean {\n    return this._map.delete(value);\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n  forEach(callback: (value: V, key: K, map: Map<K, V>) => void, thisArg: any): void {\n    this._map.forEach(callback, thisArg);\n  }\n\n}\n\nexport function createSetPolyfill(): typeof Set {\n  return Set;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shim/set.ts\n **/"],"sourceRoot":""}